# Copy this file into your organization .allstar repo as `.github/workflows/allstar-run.yml`
# to run AllStar as a scheduled GitHub action.
# See https://github.com/ossf/allstar/blob/main/github-action-installtion.md for more information.
---
name: AllStar Enforcement Action

on:
  push:
    branches:
      - main
  schedule:
    # M-F at 6:00am UTC
    - cron: '0 6 * * 1-5'

env:
  ARTIFACT_DIR: /tmp/artifacts

jobs:
  scan:
    runs-on: ubuntu-latest
    # Use chainguard/busybox based image - It has a tail for entrypoint
    container:
      # Specifying allstar by sha since tags are mutable.
      # YOU ARE RESPONSIBLE FOR UPDATING THIS FINGERPRINT FOR NEW ALLSTAR RELEASES!
      image: ghcr.io/ossf/allstar@sha256:a088ecec168b87733e454590a4a3ec9d927bbb4bcec6fe4829f52758f0e272e6 # v4.4.6-gha
      options: --user root
    environment: prod
    steps:
      - name: Create Artifact Directory
        run: mkdir $ARTIFACT_DIR
      - name: Run AllStar Policy Check
        env:
          # Ping open issues every week (168 hours)
          NOTICE_PING_DURATION_HOURS: 168
          DO_NOTHING_ON_OPT_OUT: true # consistent with https://github.com/ossf/allstar/blob/main/app-prod.yaml#L12
          ALLSTAR_LOG_LEVEL: info
          KEY_SECRET: direct
          APP_ID: ${{ vars.APP_ID }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          /ko-app/allstar -once 2> $ARTIFACT_DIR/allstar.log | tee $ARTIFACT_DIR/allstar.out
          test -s $ARTIFACT_DIR/allstar.log && echo "==== Errors ====" && cat $ARTIFACT_DIR/allstar.log
      - name: Archive AllStar Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # @4.6.2
        with:
          name: allstar-scan
          path: ${{ env.ARTIFACT_DIR }}

  analyze:
    runs-on: ubuntu-latest
    needs: scan
    environment: prod
    steps:
      - name: Download scan artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # @4.3.0
        with:
          name: allstar-scan
      - name: Make artifacts directory
        run: mkdir $ARTIFACT_DIR
      - name: Summarize Results by Check
        run: |
          grep '^{' $GITHUB_WORKSPACE/allstar.log |
            jq --slurp '[.[] | select(.enabled == true and .message == "Policy run result.") ] |
              group_by(.area) | map({
                area: .[0].area,
                summary: {
                  pass_count: map(select(.result == true)) | length,
                  fail_count: map(select(.result == false)) | length,
                  passed: map(select(.result == true)| .repo),
                  failed: map(select(.result == false)| .repo)
                }
              })' |
            tee $ARTIFACT_DIR/scan_results_by_check.json
      - name: Output Scan Results by Check to Step Summary
        run: |
          echo '## Scan Results by Check' >> $GITHUB_STEP_SUMMARY
          SCAN_RESULTS=$(cat $ARTIFACT_DIR/scan_results_by_check.json)
          echo "$SCAN_RESULTS" | jq -r '.[] | "\n<details>\n<summary>\(.area) - Pass: \(.summary.pass_count), Fail: \(.summary.fail_count)</summary>\n\n| Pass Count | Fail Count | Passed | Failed |\n| --- | --- | --- | --- |\n| \(.summary.pass_count) | \(.summary.fail_count) | \(.summary.passed | join(", ")) | \(.summary.failed | join(", ")) |\n\n</details>\n"' >> $GITHUB_STEP_SUMMARY
      - name: Summarize Results by Repository
        run: |
          grep '^{' $GITHUB_WORKSPACE/allstar.log |
            jq --slurp '[.[] | select(.enabled == true and .message == "Policy run result.") ] |
              group_by(.repo) | map({
                repository: .[0].repo,
                summary: {
                  pass_count: map(select(.result == true)) | length,
                  fail_count: map(select(.result == false)) | length,
                  passed: map(select(.result == true)| .area),
                  failed: map(select(.result == false)| .area)
                }
              })' |
            tee $ARTIFACT_DIR/scan_results_by_repo.json
      - name: Output Scan Results by Repository to Step summary
        run: |
          echo '## Scan Results by Repository' >> $GITHUB_STEP_SUMMARY
          SCAN_RESULTS_REPO=$(cat $ARTIFACT_DIR/scan_results_by_repo.json)
          echo "$SCAN_RESULTS_REPO" | jq -r '.[] | "\n<details>\n<summary>\(.repository) - Pass: \(.summary.pass_count), Fail: \(.summary.fail_count)</summary>\n\n| Pass Count | Fail Count | Passed | Failed |\n| --- | --- | --- | --- |\n| \(.summary.pass_count) | \(.summary.fail_count) | \(.summary.passed | join(", ")) | \(.summary.failed | join(", ")) |\n\n</details>\n"' >> $GITHUB_STEP_SUMMARY
      - name: Archive AllStar Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # @4.6.2
        with:
          name: allstar-results
          path: ${{ env.ARTIFACT_DIR }}
